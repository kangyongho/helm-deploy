## @section deployment
##
global:
  imageRegistry: ""
  imagePullSecrets: []

image:
  repository: nginxdemos/hello
  tag: 0.4-plain-text
  pullPolicy: IfNotPresent

kubeVersion: ""

replicaCount: 2

updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}

serviceAccount:
  enabled: true
  serviceAccountName: nginx-sa

## tip: 컨테이너 이미지에 따라 달라진다. 컨테이너 이미지 빌드시 권한 고려해야 함
containerSecurityContext:
  enabled: false
  seLinuxOptions: null
  runAsUser: 1001
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"

startupProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 3
  successThreshold: 1
  httpGet:
    path: /
    port: 80

containerPorts:
  http: 80
  https: ""

resources:
  requests:
    memory: "30Mi"
    cpu: "30m"
  # requests: {}
  limits:
    memory: "50Mi"
    cpu: "100m"
  # limits: {}

volumeMounts:
  emptydir:
    name: emptydir
  openebsHostpath:
    name: openebs-hostpath
  mountPath: /var/log/nginx

volumes:
- name: emptydir
  emptyDir: {}
- name: openebs-hostpath
  persistentVolumeClaim:
    claimName: nginx-pvc

## @section service
##
service:
  type: LoadBalancer
  ports:
    http: 80
    https: 443
  nodePorts:
    http: ""
    https: ""
  targetPort:
    http: http
    https: https

## @section ingress traefik CRDs
##

## @section hpa
##
hpa:
  resource:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 50

## @section pvc
##
pvc:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi

## @section role
##
role:
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list











